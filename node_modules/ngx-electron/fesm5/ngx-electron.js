import { __extends } from 'tslib';
import { Injectable, NgModule } from '@angular/core';

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingReturn,uselessCode} checked by tsc
 */
var ElectronService = /** @class */ (function () {
    function ElectronService() {
    }
    Object.defineProperty(ElectronService.prototype, "electron", {
        get: /**
         * @return {?}
         */
        function () {
            if (!this._electron) {
                if (window && window.require) {
                    this._electron = window.require('electron');
                    return this._electron;
                }
                return null;
            }
            return this._electron;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ElectronService.prototype, "isElectronApp", {
        /**
         * determines if SPA is running in Electron
         */
        get: /**
         * determines if SPA is running in Electron
         * @return {?}
         */
        function () {
            return !!window.navigator.userAgent.match(/Electron/);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ElectronService.prototype, "desktopCapturer", {
        get: /**
         * @return {?}
         */
        function () {
            return this.electron ? this.electron.desktopCapturer : null;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ElectronService.prototype, "ipcRenderer", {
        get: /**
         * @return {?}
         */
        function () {
            return this.electron ? this.electron.ipcRenderer : null;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ElectronService.prototype, "remote", {
        get: /**
         * @return {?}
         */
        function () {
            return this.electron ? this.electron.remote : null;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ElectronService.prototype, "webFrame", {
        get: /**
         * @return {?}
         */
        function () {
            return this.electron ? this.electron.webFrame : null;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ElectronService.prototype, "clipboard", {
        get: /**
         * @return {?}
         */
        function () {
            return this.electron ? this.electron.clipboard : null;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ElectronService.prototype, "crashReporter", {
        get: /**
         * @return {?}
         */
        function () {
            return this.electron ? this.electron.crashReporter : null;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ElectronService.prototype, "process", {
        get: /**
         * @return {?}
         */
        function () {
            return this.remote ? this.remote.process : null;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ElectronService.prototype, "nativeImage", {
        get: /**
         * @return {?}
         */
        function () {
            return this.electron ? this.electron.nativeImage : null;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ElectronService.prototype, "screen", {
        get: /**
         * @return {?}
         */
        function () {
            return this.electron ? this.electron.screen : null;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ElectronService.prototype, "shell", {
        get: /**
         * @return {?}
         */
        function () {
            return this.electron ? this.electron.shell : null;
        },
        enumerable: true,
        configurable: true
    });
    return ElectronService;
}());

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingReturn,uselessCode} checked by tsc
 */
var ElectronServiceRef = /** @class */ (function (_super) {
    __extends(ElectronServiceRef, _super);
    function ElectronServiceRef() {
        return _super.call(this) || this;
    }
    ElectronServiceRef.decorators = [
        { type: Injectable }
    ];
    /** @nocollapse */
    ElectronServiceRef.ctorParameters = function () { return []; };
    return ElectronServiceRef;
}(ElectronService));

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingReturn,uselessCode} checked by tsc
 */
var NgxElectronModule = /** @class */ (function () {
    function NgxElectronModule() {
    }
    NgxElectronModule.decorators = [
        { type: NgModule, args: [{
                    declarations: [],
                    exports: [],
                    providers: [{ provide: ElectronService, useClass: ElectronServiceRef }]
                },] }
    ];
    return NgxElectronModule;
}());

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingReturn,uselessCode} checked by tsc
 */

export { NgxElectronModule, ElectronService, ElectronServiceRef };

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibmd4LWVsZWN0cm9uLmpzLm1hcCIsInNvdXJjZXMiOlsibmc6Ly9uZ3gtZWxlY3Ryb24vbGliL2VsZWN0cm9uLnNlcnZpY2UudHMiLCJuZzovL25neC1lbGVjdHJvbi9saWIvZWxlY3Ryb24uc2VydmljZS5yZWYudHMiLCJuZzovL25neC1lbGVjdHJvbi9wdWJsaWNfYXBpLnRzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCAqIGFzIEVsZWN0cm9uIGZyb20gJ2VsZWN0cm9uJztcbmltcG9ydCB7IEVsZWN0cm9uV2luZG93IH0gZnJvbSAnLi90eXBpbmdzL2VsZWN0cm9uLndpbmRvdyc7XG5cbmRlY2xhcmUgbGV0IHdpbmRvdzogRWxlY3Ryb25XaW5kb3c7XG5cbmV4cG9ydCBjbGFzcyBFbGVjdHJvblNlcnZpY2Uge1xuICAgIHByaXZhdGUgX2VsZWN0cm9uOiBFbGVjdHJvbi5SZW5kZXJlckludGVyZmFjZTtcblxuICAgIHByaXZhdGUgZ2V0IGVsZWN0cm9uKCk6IEVsZWN0cm9uLlJlbmRlcmVySW50ZXJmYWNlIHtcbiAgICAgICAgaWYgKCF0aGlzLl9lbGVjdHJvbikge1xuICAgICAgICAgICAgaWYgKHdpbmRvdyAmJiB3aW5kb3cucmVxdWlyZSkge1xuICAgICAgICAgICAgICAgIHRoaXMuX2VsZWN0cm9uID0gd2luZG93LnJlcXVpcmUoJ2VsZWN0cm9uJyk7XG4gICAgICAgICAgICAgICAgcmV0dXJuIHRoaXMuX2VsZWN0cm9uO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgcmV0dXJuIG51bGw7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHRoaXMuX2VsZWN0cm9uO1xuICAgIH1cblxuICAgIC8qKlxuICAgICAqIGRldGVybWluZXMgaWYgU1BBIGlzIHJ1bm5pbmcgaW4gRWxlY3Ryb25cbiAgICAgKi9cbiAgICBwdWJsaWMgZ2V0IGlzRWxlY3Ryb25BcHAoKTogYm9vbGVhbiB7XG4gICAgICAgIHJldHVybiAhIXdpbmRvdy5uYXZpZ2F0b3IudXNlckFnZW50Lm1hdGNoKC9FbGVjdHJvbi8pO1xuICAgIH1cblxuICAgIHB1YmxpYyBnZXQgZGVza3RvcENhcHR1cmVyKCk6IEVsZWN0cm9uLkRlc2t0b3BDYXB0dXJlciB7XG4gICAgICAgIHJldHVybiB0aGlzLmVsZWN0cm9uID8gdGhpcy5lbGVjdHJvbi5kZXNrdG9wQ2FwdHVyZXIgOiBudWxsO1xuICAgIH1cblxuICAgIHB1YmxpYyBnZXQgaXBjUmVuZGVyZXIoKTogRWxlY3Ryb24uSXBjUmVuZGVyZXIge1xuICAgICAgICByZXR1cm4gdGhpcy5lbGVjdHJvbiA/IHRoaXMuZWxlY3Ryb24uaXBjUmVuZGVyZXIgOiBudWxsO1xuICAgIH1cblxuICAgIHB1YmxpYyBnZXQgcmVtb3RlKCk6IEVsZWN0cm9uLlJlbW90ZSB7XG4gICAgICAgIHJldHVybiB0aGlzLmVsZWN0cm9uID8gdGhpcy5lbGVjdHJvbi5yZW1vdGUgOiBudWxsO1xuICAgIH1cblxuICAgIHB1YmxpYyBnZXQgd2ViRnJhbWUoKTogRWxlY3Ryb24uV2ViRnJhbWUge1xuICAgICAgICByZXR1cm4gdGhpcy5lbGVjdHJvbiA/IHRoaXMuZWxlY3Ryb24ud2ViRnJhbWUgOiBudWxsO1xuICAgIH1cblxuICAgIHB1YmxpYyBnZXQgY2xpcGJvYXJkKCk6IEVsZWN0cm9uLkNsaXBib2FyZCB7XG4gICAgICAgIHJldHVybiB0aGlzLmVsZWN0cm9uID8gdGhpcy5lbGVjdHJvbi5jbGlwYm9hcmQgOiBudWxsO1xuICAgIH1cblxuICAgIHB1YmxpYyBnZXQgY3Jhc2hSZXBvcnRlcigpOiBFbGVjdHJvbi5DcmFzaFJlcG9ydGVyIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuZWxlY3Ryb24gPyB0aGlzLmVsZWN0cm9uLmNyYXNoUmVwb3J0ZXIgOiBudWxsO1xuICAgIH1cblxuICAgIHB1YmxpYyBnZXQgcHJvY2VzcygpOiBOb2RlSlMuUHJvY2VzcyB7XG4gICAgICAgIHJldHVybiB0aGlzLnJlbW90ZSA/IHRoaXMucmVtb3RlLnByb2Nlc3MgOiBudWxsO1xuICAgIH1cblxuICAgIHB1YmxpYyBnZXQgbmF0aXZlSW1hZ2UoKTogdHlwZW9mIEVsZWN0cm9uLm5hdGl2ZUltYWdlIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuZWxlY3Ryb24gPyB0aGlzLmVsZWN0cm9uLm5hdGl2ZUltYWdlIDogbnVsbDtcbiAgICB9XG5cbiAgICBwdWJsaWMgZ2V0IHNjcmVlbigpOiBFbGVjdHJvbi5TY3JlZW4ge1xuICAgICAgICByZXR1cm4gdGhpcy5lbGVjdHJvbiA/IHRoaXMuZWxlY3Ryb24uc2NyZWVuIDogbnVsbDtcbiAgICB9XG5cbiAgICBwdWJsaWMgZ2V0IHNoZWxsKCk6IEVsZWN0cm9uLlNoZWxsIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuZWxlY3Ryb24gPyB0aGlzLmVsZWN0cm9uLnNoZWxsIDogbnVsbDtcbiAgICB9XG59XG4iLCJpbXBvcnQgeyBFbGVjdHJvblNlcnZpY2UgfSBmcm9tICcuL2VsZWN0cm9uLnNlcnZpY2UnO1xuaW1wb3J0IHsgSW5qZWN0YWJsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuXG5ASW5qZWN0YWJsZSgpXG5leHBvcnQgY2xhc3MgRWxlY3Ryb25TZXJ2aWNlUmVmIGV4dGVuZHMgRWxlY3Ryb25TZXJ2aWNlIHtcblxuICAgIGNvbnN0cnVjdG9yKCkge1xuICAgICAgICBzdXBlcigpO1xuICAgIH1cbn1cbiIsImltcG9ydCB7IE5nTW9kdWxlIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBFbGVjdHJvblNlcnZpY2UgfSBmcm9tIFwiLi9saWIvZWxlY3Ryb24uc2VydmljZVwiO1xuaW1wb3J0IHsgRWxlY3Ryb25TZXJ2aWNlUmVmIH0gZnJvbSBcIi4vbGliL2VsZWN0cm9uLnNlcnZpY2UucmVmXCI7XG5cbmV4cG9ydCAqIGZyb20gXCIuL2xpYi9lbGVjdHJvbi5zZXJ2aWNlXCI7XG5leHBvcnQgKiBmcm9tIFwiLi9saWIvZWxlY3Ryb24uc2VydmljZS5yZWZcIjtcblxuQE5nTW9kdWxlKHtcbiAgICBkZWNsYXJhdGlvbnM6IFtdLFxuICAgIGV4cG9ydHM6IFtdLFxuICAgIHByb3ZpZGVyczogW3sgcHJvdmlkZTogRWxlY3Ryb25TZXJ2aWNlLCB1c2VDbGFzczogRWxlY3Ryb25TZXJ2aWNlUmVmIH1dXG59KVxuZXhwb3J0IGNsYXNzIE5neEVsZWN0cm9uTW9kdWxlIHtcblxufVxuIl0sIm5hbWVzIjpbInRzbGliXzEuX19leHRlbmRzIl0sIm1hcHBpbmdzIjoiOzs7Ozs7O0FBS0E7SUFBQTtLQTREQztJQXpERyxzQkFBWSxxQ0FBUTs7OztRQUFwQjtZQUNJLElBQUksQ0FBQyxJQUFJLENBQUMsU0FBUyxFQUFFO2dCQUNqQixJQUFJLE1BQU0sSUFBSSxNQUFNLENBQUMsT0FBTyxFQUFFO29CQUMxQixJQUFJLENBQUMsU0FBUyxHQUFHLE1BQU0sQ0FBQyxPQUFPLENBQUMsVUFBVSxDQUFDLENBQUM7b0JBQzVDLE9BQU8sSUFBSSxDQUFDLFNBQVMsQ0FBQztpQkFDekI7Z0JBQ0QsT0FBTyxJQUFJLENBQUM7YUFDZjtZQUNELE9BQU8sSUFBSSxDQUFDLFNBQVMsQ0FBQztTQUN6Qjs7O09BQUE7SUFLRCxzQkFBVywwQ0FBYTs7Ozs7Ozs7UUFBeEI7WUFDSSxPQUFPLENBQUMsQ0FBQyxNQUFNLENBQUMsU0FBUyxDQUFDLFNBQVMsQ0FBQyxLQUFLLENBQUMsVUFBVSxDQUFDLENBQUM7U0FDekQ7OztPQUFBO0lBRUQsc0JBQVcsNENBQWU7Ozs7UUFBMUI7WUFDSSxPQUFPLElBQUksQ0FBQyxRQUFRLEdBQUcsSUFBSSxDQUFDLFFBQVEsQ0FBQyxlQUFlLEdBQUcsSUFBSSxDQUFDO1NBQy9EOzs7T0FBQTtJQUVELHNCQUFXLHdDQUFXOzs7O1FBQXRCO1lBQ0ksT0FBTyxJQUFJLENBQUMsUUFBUSxHQUFHLElBQUksQ0FBQyxRQUFRLENBQUMsV0FBVyxHQUFHLElBQUksQ0FBQztTQUMzRDs7O09BQUE7SUFFRCxzQkFBVyxtQ0FBTTs7OztRQUFqQjtZQUNJLE9BQU8sSUFBSSxDQUFDLFFBQVEsR0FBRyxJQUFJLENBQUMsUUFBUSxDQUFDLE1BQU0sR0FBRyxJQUFJLENBQUM7U0FDdEQ7OztPQUFBO0lBRUQsc0JBQVcscUNBQVE7Ozs7UUFBbkI7WUFDSSxPQUFPLElBQUksQ0FBQyxRQUFRLEdBQUcsSUFBSSxDQUFDLFFBQVEsQ0FBQyxRQUFRLEdBQUcsSUFBSSxDQUFDO1NBQ3hEOzs7T0FBQTtJQUVELHNCQUFXLHNDQUFTOzs7O1FBQXBCO1lBQ0ksT0FBTyxJQUFJLENBQUMsUUFBUSxHQUFHLElBQUksQ0FBQyxRQUFRLENBQUMsU0FBUyxHQUFHLElBQUksQ0FBQztTQUN6RDs7O09BQUE7SUFFRCxzQkFBVywwQ0FBYTs7OztRQUF4QjtZQUNJLE9BQU8sSUFBSSxDQUFDLFFBQVEsR0FBRyxJQUFJLENBQUMsUUFBUSxDQUFDLGFBQWEsR0FBRyxJQUFJLENBQUM7U0FDN0Q7OztPQUFBO0lBRUQsc0JBQVcsb0NBQU87Ozs7UUFBbEI7WUFDSSxPQUFPLElBQUksQ0FBQyxNQUFNLEdBQUcsSUFBSSxDQUFDLE1BQU0sQ0FBQyxPQUFPLEdBQUcsSUFBSSxDQUFDO1NBQ25EOzs7T0FBQTtJQUVELHNCQUFXLHdDQUFXOzs7O1FBQXRCO1lBQ0ksT0FBTyxJQUFJLENBQUMsUUFBUSxHQUFHLElBQUksQ0FBQyxRQUFRLENBQUMsV0FBVyxHQUFHLElBQUksQ0FBQztTQUMzRDs7O09BQUE7SUFFRCxzQkFBVyxtQ0FBTTs7OztRQUFqQjtZQUNJLE9BQU8sSUFBSSxDQUFDLFFBQVEsR0FBRyxJQUFJLENBQUMsUUFBUSxDQUFDLE1BQU0sR0FBRyxJQUFJLENBQUM7U0FDdEQ7OztPQUFBO0lBRUQsc0JBQVcsa0NBQUs7Ozs7UUFBaEI7WUFDSSxPQUFPLElBQUksQ0FBQyxRQUFRLEdBQUcsSUFBSSxDQUFDLFFBQVEsQ0FBQyxLQUFLLEdBQUcsSUFBSSxDQUFDO1NBQ3JEOzs7T0FBQTtJQUNMLHNCQUFDO0NBQUE7Ozs7Ozs7SUM3RHVDQSxzQ0FBZTtJQUVuRDtlQUNJLGlCQUFPO0tBQ1Y7O2dCQUxKLFVBQVU7Ozs7SUFNWCx5QkFBQztDQUFBLENBTHVDLGVBQWU7Ozs7OztBQ0p2RDtJQU9BO0tBT0M7O2dCQVBBLFFBQVEsU0FBQztvQkFDTixZQUFZLEVBQUUsRUFBRTtvQkFDaEIsT0FBTyxFQUFFLEVBQUU7b0JBQ1gsU0FBUyxFQUFFLENBQUMsRUFBRSxPQUFPLEVBQUUsZUFBZSxFQUFFLFFBQVEsRUFBRSxrQkFBa0IsRUFBRSxDQUFDO2lCQUMxRTs7SUFHRCx3QkFBQztDQVBEOzs7Ozs7Ozs7In0=